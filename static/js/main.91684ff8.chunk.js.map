{"version":3,"sources":["customHooks/useResponsive3d.js","ui/utils/httpConfig.js","ui/contact-form/contact-form-video-10mb.mp4","ui/contact-form/ContactFormContents.js","ui/contact-form/ContactForm.js","ui/Contact.js","ui/scene/3d-text/TitleText.js","ui/scene/3d-text/SkillsTitleText.js","ui/scene/3d-text/ProjectsTitleText.js","ui/scene/ProjectsExamples.js","ui/scene/3d-text/ProjectsListText.js","ui/scene/blender.glb","ui/scene/Blender.js","ui/scene/skills-icons/SkillsIcons.js","ui/scene/3d-text/SkillsListText.js","ui/scene/3d-text/TitleProfessionText.js","ui/scene/3d-text/ContactFormText.js","ui/tutorial/mouse01.glb","ui/tutorial/Mouse01.js","ui/tutorial/hand-model01.glb","ui/tutorial/Hand-model.js","ui/tutorial/headset01.glb","ui/tutorial/Headset01.js","ui/scene/ThreeDScene.js","ui/Home.js","index.js","App.js"],"names":["useResponsive3d","breakpoint","useState","window","innerWidth","width","setWidth","xr","navigator","titleSize","setTitleSize","titleXPosition","setTitleXPosition","titleYPosition","setTitleYPosition","titleGroupYPosition","setTitleGroupYPosition","professionSize","setProfessionSize","professionTitleSize","setProfessionTitleSize","professionXPosition","setProfessionXPosition","professionYPosition","setProfessionYPosition","professionTitleXPosition","setProfessionTitleXPosition","professionTitleYPosition","setProfessionTitleYPosition","skillsTitleSize","setSkillsTitleSize","skillsTitleXPosition","setSkillsTitleXPosition","skillsTitleYPosition","setSkillsTitleYPosition","skillsTitleZPosition","setSkillsTitleZPosition","skillsTextSize","setSkillsTextSize","skillsTextXPosition","setSkillsTextXPosition","skillsTextYPosition","setSkillsTextYPosition","skillsTextZPosition","setSkillsTextZPosition","skillsIconSize","setSkillsIconSize","skillsIconZPositionSize","setSkillsIconZPositionSize","projectsTitleSize","setProjectsTitleSize","projectsTitleXPosition","setProjectsTitleXPosition","projectsTitleYPosition","setProjectsTitleYPosition","projectsTitleZPosition","setProjectsTitleZPosition","projectsTextSize","setProjectsTextSize","projectsTextXPosition","setProjectsTextXPosition","projectsTextYPosition","setProjectsTextYPosition","projectsTextZPosition","setProjectsTextZPosition","projectsExampleSize","setProjectsExampleSize","projectsExampleZPosition","setProjectsExampleZPosition","projectsExampleYPosition","setProjectsExampleYPosition","projectsExampleYRotation","setProjectsExampleYRotation","projectsExpNinjaExampleSize","setProjectsExpNinjaExampleSize","projectsExpNinjaExampleZPosition","setProjectsExpNinjaExampleZPosition","projectsExpNinjaExampleYPosition","setProjectsExpNinjaExampleYPosition","projectsExpNinjaExampleYRotation","setProjectsExpNinjaExampleYRotation","contactFormTextSize","setContactFormTextSize","contactFormTextXPosition","setContactFormTextXPosition","contactFormTextYPosition","setContactFormTextYPosition","contactFormTextZPosition","setContactFormTextZPosition","contactButtonWidthSize","setContactButtonWidthSize","contactButtonHeightSize","setContactButtonHeightSize","contactButtonXPosition","setContactButtonXPosition","contactButtonYPosition","setContactButtonYPosition","contactButtonZPosition","setContactButtonZPosition","mouseVisible","setMouseVisible","fingerVisible","setFingerVisible","headsetVisible","setHeadsetVisible","useEffect","handleWindowResize","addEventListener","removeEventListener","undefined","httpConfig","axios","create","interceptors","response","use","data","headers","status","message","type","error","console","log","Promise","reject","request","config","authorization","localStorage","getItem","ContactFormContents","props","values","errors","touched","handleChange","dirty","isSubmitting","handleBlur","handleSubmit","history","handleReset","useHistory","src","video","autoPlay","muted","className","onSubmit","htmlFor","name","value","contactFormName","placeholder","onChange","onBlur","contactFormEmail","contactFormSubject","contactFormMessage","rows","onClick","push","ContactForm","validator","Yup","shape","required","initialValues","resetForm","setStatus","post","then","reply","validationSchema","Contact","TitleText","FontConfig","text","font","useLoader","THREE","useMemo","size","height","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","mesh","useRef","ref","args","PortfolioText","hovered","document","body","style","cursor","position","SkillsTitleText","color","setColor","rotation","onSelect","onHover","ProjectsTitleText","ProjectsExamples","exampleState","saiyanWebDevExample","useTexture","alienGramExample","expNinjaExample","currentExample","setCurrentExample","currentExampleVisible","setCurrentExampleVisible","scale","visible","transparent","map","ProjectsListText","uniqueColor","ListText","setExampleState","startingColor","saiyanWebDevColor","setSaiyanWebDevColor","expNinjaColor","setExpNinjaColor","alienGramColor","setAlienGramColor","thirtySeconds","setThirtySeconds","timerOnOff","setTimerOnOff","intervalId","setInterval","clearInterval","setHovered","open","onPointerOver","onPointerOut","useGLTF","preload","blenderGLB","SkillsIcons","iconState","reactIcon","expressIcon","reduxIcon","dockerIcon","bootstrapIcon","githubIcon","currentIcon","setCurrentIcon","SkillsListText","setIconState","reactColor","setReactColor","expressColor","setExpressColor","reduxColor","setReduxColor","dockerColor","setDockerColor","bootstrapColor","setBootstrapColor","githubColor","setGithubColor","onPointerEnter","onPointerLeave","onSqueezeStart","onSqueezeEnd","TitleProfessionText","uniqueSize","uniqueMaterial","ProfessionText","textState","setTextState","descriptionState","setDescriptionState","textColor","ContactFormText","buttonColor","setButtonColor","location","attach","Mouse01","group","mouseGLB","nodes","materials","animations","actions","useAnimations","action","setAction","mouseButtonColor","setMouseButtonColor","reset","fadeIn","play","fadeOut","dispose","Math","PI","on","geometry","Mesh_0","material","Material__2","Mesh_0001","HandModel","handModel","BlocksPaper","Headset","headset","base","Mesh_1","checker","Mesh_2","checker2","Mesh_3","dots","Mesh_4","foam","Mesh_5","logo","Mesh_6","screen","ThreeDScene","fallback","OrbitControls","enablePan","enableZoom","minDistance","maxDistance","rotateSpeed","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","intensity","Stars","radius","depth","count","factor","saturation","fade","Home","ReactDOM","render","exact","path","component","querySelector"],"mappings":"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","file":"static/js/main.91684ff8.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\n// A responsive hook that returns sizes and positions as a number for 3D objects to be mobile Responcive\r\n\r\nexport const useResponsive3d = () => {\r\n  //This is the window Width in which responsive behavior will occur\r\n  const breakpoint = 620;\r\n\r\n  //setWidth is the current windows width in px\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  const xr = navigator.xr;\r\n\r\n  //   console.log(\"is xr on?\", xr)\r\n  // console.log('width', width);\r\n\r\n  //these states change based on the breakpoints\r\n  //variables for the title page\r\n  const [titleSize, setTitleSize] = useState(5);\r\n  const [titleXPosition, setTitleXPosition] = useState(-9);\r\n  const [titleYPosition, setTitleYPosition] = useState(6);\r\n  const [titleGroupYPosition, setTitleGroupYPosition] = useState(0);\r\n\r\n  //variables for the profession Title\r\n  const [professionSize, setProfessionSize] = useState(1);\r\n  const [professionTitleSize, setProfessionTitleSize] = useState(1.5);\r\n  const [professionXPosition, setProfessionXPosition] = useState(-10);\r\n  const [professionYPosition, setProfessionYPosition] = useState(-5);\r\n  const [professionTitleXPosition, setProfessionTitleXPosition] = useState(3);\r\n  const [professionTitleYPosition, setProfessionTitleYPosition] = useState(-5);\r\n\r\n  //variables for the skills title section\r\n  const [skillsTitleSize, setSkillsTitleSize] = useState(5);\r\n  const [skillsTitleXPosition, setSkillsTitleXPosition] = useState(20);\r\n  const [skillsTitleYPosition, setSkillsTitleYPosition] = useState(7);\r\n  const [skillsTitleZPosition, setSkillsTitleZPosition] = useState(-15);\r\n\r\n  //variables for the skills text section\r\n  const [skillsTextSize, setSkillsTextSize] = useState(1.5);\r\n  const [skillsTextXPosition, setSkillsTextXPosition] = useState(0);\r\n  const [skillsTextYPosition, setSkillsTextYPosition] = useState(0);\r\n  const [skillsTextZPosition, setSkillsTextZPosition] = useState(-15);\r\n  const [skillsIconSize, setSkillsIconSize] = useState(12);\r\n  const [skillsIconZPositionSize, setSkillsIconZPositionSize] = useState(5);\r\n\r\n  //variables for the Projects title section\r\n  const [projectsTitleSize, setProjectsTitleSize] = useState(5);\r\n  const [projectsTitleXPosition, setProjectsTitleXPosition] = useState(-20);\r\n  const [projectsTitleYPosition, setProjectsTitleYPosition] = useState(7);\r\n  const [projectsTitleZPosition, setProjectsTitleZPosition] = useState(10);\r\n\r\n  //variables for the Projects text section\r\n  const [projectsTextSize, setProjectsTextSize] = useState(2.5);\r\n  const [projectsTextXPosition, setProjectsTextXPosition] = useState(0);\r\n  const [projectsTextYPosition, setProjectsTextYPosition] = useState(0);\r\n  const [projectsTextZPosition, setProjectsTextZPosition] = useState(0);\r\n  const [projectsExampleSize, setProjectsExampleSize] = useState(14);\r\n  const [projectsExampleZPosition, setProjectsExampleZPosition] = useState(18);\r\n  const [projectsExampleYPosition, setProjectsExampleYPosition] = useState(-9);\r\n  const [projectsExampleYRotation, setProjectsExampleYRotation] = useState(2.3);\r\n  const [projectsExpNinjaExampleSize, setProjectsExpNinjaExampleSize] =\r\n    useState(0.08);\r\n  const [\r\n    projectsExpNinjaExampleZPosition,\r\n    setProjectsExpNinjaExampleZPosition,\r\n  ] = useState(18);\r\n  const [\r\n    projectsExpNinjaExampleYPosition,\r\n    setProjectsExpNinjaExampleYPosition,\r\n  ] = useState(-8);\r\n  const [\r\n    projectsExpNinjaExampleYRotation,\r\n    setProjectsExpNinjaExampleYRotation,\r\n  ] = useState(2.3);\r\n\r\n  //variables for the Contact Form\r\n  const [contactFormTextSize, setContactFormTextSize] = useState(2);\r\n  const [contactFormTextXPosition, setContactFormTextXPosition] = useState(-25);\r\n  const [contactFormTextYPosition, setContactFormTextYPosition] = useState(-10);\r\n  const [contactFormTextZPosition, setContactFormTextZPosition] = useState(-15);\r\n\r\n  //variables for the Contact Form Button\r\n  const [contactButtonWidthSize, setContactButtonWidthSize] = useState(20);\r\n  const [contactButtonHeightSize, setContactButtonHeightSize] = useState(5);\r\n  const [contactButtonXPosition, setContactButtonXPosition] = useState(-16);\r\n  const [contactButtonYPosition, setContactButtonYPosition] = useState(-9);\r\n  const [contactButtonZPosition, setContactButtonZPosition] = useState(-15);\r\n\r\n  //determines if 3d-mouse or 3d-finger or VR Headset should be visible\r\n  const [mouseVisible, setMouseVisible] = useState(true);\r\n  const [fingerVisible, setFingerVisible] = useState(false);\r\n  const [headsetVisible, setHeadsetVisible] = useState(false);\r\n\r\n  //This determines the size of the window\r\n  useEffect(() => {\r\n    const handleWindowResize = () => setWidth(window.innerWidth);\r\n    window.addEventListener(\"resize\", handleWindowResize);\r\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\r\n  }, [width]);\r\n\r\n  //this sets the sizes and positions of 3d objects based on the size of the window and a breaking point\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      if (xr !== undefined || null) {\r\n        setFingerVisible(false);\r\n        setMouseVisible(false);\r\n        setHeadsetVisible(true);\r\n      } else if (breakpoint < width) {\r\n        setFingerVisible(false);\r\n        setMouseVisible(true);\r\n        setHeadsetVisible(false);\r\n      } else if (breakpoint > width) {\r\n        setFingerVisible(true);\r\n        setMouseVisible(false);\r\n        setHeadsetVisible(false);\r\n      }\r\n      \r\n      if (breakpoint < width) {\r\n        //desktop positioning\r\n        //set title\r\n        setTitleSize(5);\r\n        setTitleXPosition(-9);\r\n        setTitleYPosition(6);\r\n        setTitleGroupYPosition(0);\r\n        //set profession text\r\n        setProfessionSize(1);\r\n        setProfessionTitleSize(1.5);\r\n        setProfessionXPosition(-10);\r\n        setProfessionYPosition(-5);\r\n        setProfessionTitleXPosition(3);\r\n        setProfessionTitleYPosition(-5);\r\n        //set skills title\r\n        setSkillsTitleSize(5);\r\n        setSkillsTitleXPosition(20);\r\n        setSkillsTitleYPosition(7);\r\n        //set skills text\r\n        setSkillsTextSize(1.5);\r\n        setSkillsTextXPosition(0);\r\n        setSkillsTextYPosition(0);\r\n        setSkillsTextZPosition(-15);\r\n        setSkillsIconSize(12);\r\n        setSkillsIconZPositionSize(5);\r\n        //set projects title\r\n        setProjectsTitleSize(5);\r\n        setProjectsTitleXPosition(-20);\r\n        setProjectsTitleYPosition(7);\r\n        setProjectsTextZPosition(10);\r\n        //set projects text\r\n        setProjectsTextSize(2.5);\r\n        setProjectsTextXPosition(0);\r\n        setProjectsTextYPosition(0);\r\n        setProjectsTextZPosition(0);\r\n        setProjectsExampleSize(14);\r\n        setProjectsExampleZPosition(18);\r\n        setProjectsExampleYPosition(0);\r\n        setProjectsExampleYRotation(2.3);\r\n        setProjectsExpNinjaExampleSize(0.08);\r\n        setProjectsExpNinjaExampleYPosition(-8);\r\n        setProjectsExpNinjaExampleZPosition(18);\r\n        setProjectsExpNinjaExampleYRotation(2.3);\r\n        //set contact form text\r\n        setContactFormTextSize(2);\r\n        setContactFormTextXPosition(-25);\r\n        setContactFormTextYPosition(-10);\r\n        setContactFormTextZPosition(-15);\r\n        //set contact button size\r\n        setContactButtonWidthSize(20);\r\n        setContactButtonHeightSize(5);\r\n        setContactButtonXPosition(-16);\r\n        setContactButtonYPosition(-9);\r\n        setContactButtonZPosition(-15);\r\n      } else if (breakpoint > width) {\r\n        //mobile positioning\r\n        //set title\r\n        setTitleSize(3);\r\n        setTitleXPosition(-5);\r\n        setTitleYPosition(3);\r\n        setTitleGroupYPosition(5);\r\n        //set profession text\r\n        setProfessionSize(0.9);\r\n        setProfessionTitleSize(1.8);\r\n        setProfessionXPosition(-5);\r\n        setProfessionYPosition(1);\r\n        setProfessionTitleXPosition(-5);\r\n        setProfessionTitleYPosition(-2);\r\n        //set skills\r\n        setSkillsTitleSize(2);\r\n        setSkillsTitleXPosition(20);\r\n        setSkillsTitleYPosition(7);\r\n        setSkillsTitleZPosition(-6);\r\n        //set skills text\r\n        setSkillsTextSize(1.5);\r\n        setSkillsTextXPosition(0);\r\n        setSkillsTextYPosition(0);\r\n        setSkillsTextZPosition(-8);\r\n        setSkillsIconSize(6);\r\n        setSkillsIconZPositionSize(5);\r\n        //set projects title\r\n        setProjectsTitleSize(3.5);\r\n        setProjectsTitleXPosition(-20);\r\n        setProjectsTitleYPosition(11);\r\n        setProjectsTitleZPosition(7.5);\r\n        //set projects text\r\n        setProjectsTextSize(1.5);\r\n        setProjectsTextXPosition(0);\r\n        setProjectsTextYPosition(5);\r\n        setProjectsTextZPosition(-2);\r\n        setProjectsExampleSize(14);\r\n        setProjectsExampleZPosition(0);\r\n        setProjectsExampleYPosition(-9);\r\n        setProjectsExampleYRotation(1.570796);\r\n        setProjectsExpNinjaExampleSize(0.05);\r\n        setProjectsExpNinjaExampleYPosition(-12);\r\n        setProjectsExpNinjaExampleZPosition(0);\r\n        setProjectsExpNinjaExampleYRotation(1.570796);\r\n        setContactFormTextSize(1);\r\n        setContactFormTextXPosition(-5);\r\n        setContactFormTextYPosition(-10);\r\n        setContactFormTextZPosition(-15);\r\n        //set contact button size\r\n        setContactButtonWidthSize(11);\r\n        setContactButtonHeightSize(2);\r\n        setContactButtonXPosition(-0.5);\r\n        setContactButtonYPosition(-9.5);\r\n        setContactButtonZPosition(-15);\r\n      }\r\n    };\r\n    handleResize();\r\n    // return () => handleResize\r\n  }, [width, xr]);\r\n\r\n  return {\r\n    //these are all the returned exports\r\n    titleSize,\r\n    titleXPosition,\r\n    titleYPosition,\r\n    titleGroupYPosition,\r\n    professionSize,\r\n    professionTitleSize,\r\n    professionXPosition,\r\n    professionYPosition,\r\n    professionTitleXPosition,\r\n    professionTitleYPosition,\r\n    skillsTitleSize,\r\n    skillsTitleXPosition,\r\n    skillsTitleYPosition,\r\n    skillsTitleZPosition,\r\n    skillsTextSize,\r\n    skillsTextXPosition,\r\n    skillsTextYPosition,\r\n    skillsTextZPosition,\r\n    skillsIconSize,\r\n    skillsIconZPositionSize,\r\n    projectsTitleSize,\r\n    projectsTitleXPosition,\r\n    projectsTitleYPosition,\r\n    projectsTitleZPosition,\r\n    projectsTextSize,\r\n    projectsTextXPosition,\r\n    projectsTextYPosition,\r\n    projectsTextZPosition,\r\n    projectsExampleSize,\r\n    projectsExampleZPosition,\r\n    projectsExampleYPosition,\r\n    projectsExampleYRotation,\r\n    projectsExpNinjaExampleSize,\r\n    projectsExpNinjaExampleYPosition,\r\n    projectsExpNinjaExampleZPosition,\r\n    projectsExpNinjaExampleYRotation,\r\n    contactFormTextSize,\r\n    contactFormTextXPosition,\r\n    contactFormTextYPosition,\r\n    contactFormTextZPosition,\r\n    contactButtonWidthSize,\r\n    contactButtonHeightSize,\r\n    contactButtonXPosition,\r\n    contactButtonYPosition,\r\n    contactButtonZPosition,\r\n    mouseVisible,\r\n    fingerVisible,\r\n    headsetVisible,\r\n  };\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const httpConfig = axios.create();\r\n\r\nhttpConfig.interceptors.response.use(function ({data, headers}) {\r\n\tif (data.status === 200) {\r\n\t\treturn data.data !== null\r\n\t\t\t? {message: null, data: data.data, status: 200, type: \" alert alert-success\", headers: {...headers}}\r\n\t\t\t: {message: data.message, status: 200, type: \" alert alert-success\", data: null, headers: {...headers}};\r\n\t}\r\n\treturn {message: data.message, status: data.status, type: \"alert alert-danger\", data: null, headers: {...headers}}\r\n\r\n}, function (error) {\r\n\t// Do something with response error\r\n\tconsole.log(error);\r\n\treturn Promise.reject(error);\r\n});\r\n\r\nhttpConfig.interceptors.request.use(\r\n\t(config) => {\r\n\r\n\t\t// Attach our authorization via JWT token.\r\n\t\tconst authorization = window.localStorage.getItem(\"authorization\")\r\n\t\tif (authorization) {\r\n\t\t\tconfig.headers['authorization'] = authorization\r\n\t\t}\r\n\t\treturn config\r\n\t}, (error) => {\r\n\t\t// Do something with response error\r\n\t\tconsole.log(error);\r\n\t\treturn Promise.reject(error);\r\n\t}\r\n)\r\n","export default __webpack_public_path__ + \"static/media/contact-form-video-10mb.d8340572.mp4\";","import React from \"react\";\r\nimport {FormDebugger} from \"./FormDebugger\";\r\nimport \"./form-style.css\"\r\nimport video from \"./contact-form-video-10mb.mp4\"\r\nimport {useHistory} from \"react-router\";\r\n\r\n\r\nexport const ContactFormContents = (props) => {\r\n    const {\r\n        status,\r\n        values,\r\n        errors,\r\n        touched,\r\n        dirty,\r\n        isSubmitting,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        handleReset\r\n    } = props\r\n\r\n    // console.log(\"status\", status.type, status.message)\r\n\r\n    let history = useHistory();\r\n\r\n    function handleClick() {\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <video src={video} autoPlay muted className=\"background-video\"></video>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col form-text-color\">\r\n                        <h1>Contact Me</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col form-text-color\">\r\n                        <h2>Complete Form Below</h2>\r\n                    </div>\r\n                </div>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"form-group form-text-color\">\r\n                                <label htmlFor=\"contactFormName\">Name</label>\r\n                                <div className=\"input-group\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <div className=\"input-group-text\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        name=\"contactFormName\"\r\n                                        type=\"text\"\r\n                                        value={values.contactFormName}\r\n                                        placeholder=\"Enter Name\"\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                </div>\r\n                                {\r\n                                    errors.contactFormName && touched.contactFormName && (\r\n                                        <div className=\"alert alert-danger\">\r\n                                            {errors.contactFormName}\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col\">\r\n                            <div className=\"form-group form-text-color\">\r\n                                <label htmlFor=\"contactFormEmail\">Email</label>\r\n                                <div className=\"input-group\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <div className=\"input-group-text\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        name=\"contactFormEmail\"\r\n                                        type=\"email\"\r\n                                        value={values.contactFormEmail}\r\n                                        placeholder=\"Enter Email\"\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                </div>\r\n                                {\r\n                                    errors.contactFormEmail && touched.contactFormEmail && (\r\n                                        <div className=\"alert alert-danger\">\r\n                                            {errors.contactFormEmail}\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"form-group form-text-color\">\r\n                                <label htmlFor=\"contactFormSubject\">Subject</label>\r\n                                <div className=\"input-group\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <div className=\"input-group-text\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        name=\"contactFormSubject\"\r\n                                        type=\"text\"\r\n                                        value={values.contactFormSubject}\r\n                                        placeholder=\"Enter Subject\"\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                </div>\r\n                                {\r\n                                    errors.contactFormSubject && touched.contactFormSubject && (\r\n                                        <div className=\"alert alert-danger\">\r\n                                            {errors.contactFormSubject}\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"form-group form-text-color\">\r\n                                <label htmlFor=\"contactFormMessage\">Message</label>\r\n                                <div className=\"input-group\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <div className=\"input-group-text\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <textarea\r\n                                        className=\"form-control\"\r\n                                        name=\"contactFormMessage\"\r\n                                        // type=\"text\"\r\n                                        value={values.contactFormMessage}\r\n                                        placeholder=\"Enter Message\"\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        rows=\"5\"\r\n                                    />\r\n                                </div>\r\n                                {\r\n                                    errors.contactFormMessage && touched.contactFormMessage && (\r\n                                        <div className=\"alert alert-danger\">\r\n                                            {errors.contactFormMessage}\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                            <div className=\"form-group\">\r\n                                <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                            <div>\r\n                                <button\r\n                                    className=\"btn btn-info\"\r\n                                    type=\"button\" onClick={handleClick}\r\n                                >Home\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    {/*<FormDebugger {...props} />*/}\r\n                </form>\r\n                {\r\n                    status && (<div className={status.type}>{status.message}</div>)\r\n                }\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {httpConfig} from \"../utils/httpConfig\";\r\nimport * as Yup from \"yup\"\r\nimport {Formik} from \"formik\"\r\n\r\nimport {ContactFormContents} from \"./ContactFormContents\";\r\n\r\nexport const ContactForm = () => {\r\n\r\n    const contactForm = {\r\n        contactFormName: \"\",\r\n        contactFormEmail: \"\",\r\n        contactFormSubject: \"\",\r\n        contactFormMessage: \"\",\r\n    }\r\n\r\n    const validator = Yup.object().shape({\r\n        contactFormName: Yup.string()\r\n            .required(\"Name is required\"),\r\n        contactFormEmail: Yup.string()\r\n            .required(\"Email is required\"),\r\n        contactFormSubject: Yup.string()\r\n            .required(\"Subject is required\"),\r\n        contactFormMessage: Yup.string()\r\n            .required(\"Message is required\")\r\n    })\r\n\r\n    const submitContactForm = (values, {resetForm, setStatus}) => {\r\n        httpConfig.post(\"/apis/contact-form/\", values)\r\n            .then(reply => {\r\n                let { message, type } = reply\r\n\r\n                if(reply.status === 200 ) {\r\n                    resetForm()\r\n                }\r\n                setStatus({message, type})\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={contactForm}\r\n            onSubmit={submitContactForm}\r\n            validationSchema={validator}\r\n            >\r\n            {ContactFormContents}\r\n        </Formik>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {ContactForm} from \"./contact-form/ContactForm\";\r\n\r\nexport const Contact = () => {\r\n    return (\r\n        <>\r\n        <ContactForm />\r\n        </>\r\n    )\r\n}\r\n","import React, {useEffect, useMemo, useRef, useState} from \"react\";\r\nimport * as THREE from \"three\"\r\nimport {useLoader} from \"@react-three/fiber\";\r\nimport {useResponsive3d} from \"../../../customHooks/useResponsive3d\";\r\nimport {Contact} from \"../../Contact\";\r\n\r\n\r\nexport const TitleText = () => {\r\n\r\n    const FontConfig = ({text}) => {\r\n        const font = useLoader(THREE.FontLoader, \"/Saiyan-Sans-Regular.json\");\r\n\r\n        // sets the size of the 3d text based on mobile or desktop using a custom hook\r\n        const {titleSize} = useResponsive3d()\r\n\r\n        // const titleSize = 5\r\n\r\n        // console.log(\"titleSize\", titleSize)\r\n\r\n        const config = useMemo(\r\n            () => ({\r\n                font: font,\r\n                size: titleSize,\r\n                height: 0.4,\r\n                curveSegments: 32,\r\n                bevelEnabled: true,\r\n                bevelThickness: 0.03,\r\n                bevelSize: 0.02,\r\n                bevelOffset: 0,\r\n                bevelSegments: 5\r\n            }),\r\n            [font, titleSize]\r\n        );\r\n        const mesh = useRef();\r\n\r\n        return (\r\n            <>\r\n                <group\r\n                >\r\n                    <mesh ref={mesh}>\r\n                        <textGeometry args={[text, config]}/>\r\n                        <meshNormalMaterial/>\r\n                    </mesh>\r\n                </group>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const PortfolioText = () => {\r\n\r\n        const {titleXPosition, titleYPosition, titleGroupYPosition} = useResponsive3d()\r\n\r\n        // const titleXPosition = -9\r\n        // const titleYPosition = 6\r\n\r\n        // console.log(\"titlePostion\", titleXPosition)\r\n\r\n        //hover cursor change\r\n        const [hovered, setHovered] = useState(false)\r\n        useEffect(() => void (document.body.style.cursor = hovered ? \"pointer\" : \"auto\"), [hovered])\r\n\r\n        return (\r\n            <>\r\n                <group\r\n                    position={[0, titleGroupYPosition, 0]}\r\n                >\r\n                    <group\r\n                        position={[titleXPosition, titleYPosition, -15]}\r\n                    >\r\n                        <FontConfig\r\n                            text=\"Codys\"\r\n                        />\r\n                    </group>\r\n                    <group\r\n                        position={[titleXPosition, 0, -15]}\r\n                    >\r\n                        <FontConfig\r\n                            text=\"Portfolio\"\r\n                        />\r\n                    </group>\r\n                </group>\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <PortfolioText/>\r\n        </>\r\n    )\r\n}\r\n","import React, {useEffect, useMemo, useRef, useState} from \"react\";\r\nimport * as THREE from \"three\"\r\nimport {useLoader} from \"@react-three/fiber\";\r\nimport {Interactive} from \"@react-three/xr\";\r\nimport {useResponsive3d} from \"../../../customHooks/useResponsive3d\";\r\n\r\n\r\nexport const SkillsTitleText = () => {\r\n\r\n    const [color, setColor] = useState(\"#e20e83\")\r\n\r\n    const { skillsTitleSize } = useResponsive3d()\r\n\r\n    const FontConfig = ({text, position, rotation, color}) => {\r\n        const font = useLoader(THREE.FontLoader, \"/Saiyan-Sans-Regular.json\");\r\n        const config = useMemo(\r\n            () => ({\r\n                font: font,\r\n                size: skillsTitleSize,\r\n                height: 0.2,\r\n                curveSegments: 32,\r\n                bevelEnabled: true,\r\n                bevelThickness: 0.03,\r\n                bevelSize: 0.02,\r\n                bevelOffset: 0,\r\n                bevelSegments: 5\r\n            }),\r\n            [font]\r\n        );\r\n        const mesh = useRef();\r\n        return (\r\n            <>\r\n                <group position={position} rotation={rotation}>\r\n                    <mesh ref={mesh}>\r\n                        <textGeometry args={[text, config]}/>\r\n                        <meshBasicMaterial color={color}/>\r\n                    </mesh>\r\n                </group>\r\n            </>\r\n        )\r\n    }\r\n    const TitleText = () => {\r\n\r\n        const { skillsTitleXPosition, skillsTitleYPosition, skillsTitleZPosition } = useResponsive3d()\r\n\r\n        return (\r\n            <>\r\n                <group\r\n                    onClick={ () => setColor(\"#0000ff\")}\r\n\r\n                >\r\n                    <Interactive\r\n                        onSelect={() => setColor(\"#0000ff\")}\r\n                        onHover={() => console.log(\"Hovered\")}\r\n                    >\r\n                        <FontConfig\r\n                            text=\"Tech Skills\"\r\n                            position={[skillsTitleXPosition, skillsTitleYPosition, skillsTitleZPosition]}\r\n                            rotation={[0, -1.570796, 0]}\r\n                            color={color}\r\n                        />\r\n                    </Interactive>\r\n                </group>\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n        <TitleText />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React, {useMemo, useRef} from \"react\";\r\nimport * as THREE from \"three\"\r\nimport {useLoader} from \"@react-three/fiber\";\r\nimport {useResponsive3d} from \"../../../customHooks/useResponsive3d\";\r\n\r\n\r\n//Extra fonts\r\n// /Basaro_Regular.json\r\n\r\n// /Sunmore-Slant-Free-Regular.json\r\n// /Ranille-Normal-Regular.json\r\n// /Roboto-Slab-Bold.json\r\n// /Saiyan-Sans-Regular.json\r\n\r\nexport const ProjectsTitleText = () => {\r\n\r\n    const { projectsTitleSize } = useResponsive3d()\r\n\r\n\r\n    const FontConfig = ({text, position, rotation}) => {\r\n        const font = useLoader(THREE.FontLoader, \"/Saiyan-Sans-Regular.json\");\r\n        const config = useMemo(\r\n            () => ({\r\n                font: font,\r\n                size: projectsTitleSize,\r\n                height: 0.2,\r\n                curveSegments: 32,\r\n                bevelEnabled: true,\r\n                bevelThickness: 0.03,\r\n                bevelSize: 0.02,\r\n                bevelOffset: 0,\r\n                bevelSegments: 5\r\n            }),\r\n            [font]\r\n        );\r\n        const mesh = useRef();\r\n        return (\r\n            <>\r\n                <group position={position} rotation={rotation}>\r\n                    <mesh ref={mesh}>\r\n                        <textGeometry args={[text, config]}/>\r\n                        <meshBasicMaterial color={\"#e20e83\"}/>\r\n                    </mesh>\r\n                </group>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const TitleText = () => {\r\n\r\n        const { projectsTitleXPosition, projectsTitleYPosition, projectsTitleZPosition } = useResponsive3d()\r\n\r\n        return (\r\n            <>\r\n                <group\r\n                >\r\n                    <FontConfig\r\n                        text=\"Projects\"\r\n                        position={[projectsTitleXPosition, projectsTitleYPosition, projectsTitleZPosition]}\r\n                        rotation={[0, 1.570796, 0]}\r\n                    />\r\n                </group>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TitleText/>\r\n        </>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useTexture} from \"@react-three/drei\";\r\nimport {useResponsive3d} from \"../../customHooks/useResponsive3d\";\r\n\r\n\r\n\r\nexport const ProjectsExamples = ({exampleState}) => {\r\n\r\n    //loads textures for the examples\r\n    const saiyanWebDevExample = useTexture(\"/saiyanwebdev-example.png\")\r\n    const alienGramExample = useTexture(\"/aliengram-example.png\")\r\n    const expNinjaExample = useTexture(\"/expNinja-example.png\")\r\n\r\n    //sets state for the current example to be shown\r\n    const [currentExample, setCurrentExample] = useState(null)\r\n    const [currentExampleVisible, setCurrentExampleVisible] = useState(true)\r\n    // const [expNinjaVisible, setExpNinjaVisible] = useState(false)\r\n\r\n\r\n    //determines which icon is showing\r\n    useEffect(() => {\r\n        if (exampleState === \"saiyanWebDevActive\") {\r\n            setCurrentExample(saiyanWebDevExample)\r\n            setCurrentExampleVisible(true)\r\n            // setExpNinjaVisible(false)\r\n        } else if (exampleState === \"expNinjaActive\") {\r\n            setCurrentExampleVisible(true)\r\n            setCurrentExample(expNinjaExample)\r\n            // setExpNinjaVisible(true)\r\n        } else if (exampleState === \"alienGramActive\") {\r\n            // setExpNinjaVisible(false)\r\n            setCurrentExampleVisible(true)\r\n            setCurrentExample(alienGramExample)\r\n        }\r\n        // console.log(\"icon state\", iconState)\r\n    }, [exampleState])\r\n\r\n\r\n    const {\r\n        projectsExampleSize,\r\n        projectsExampleYPosition,\r\n        projectsExampleZPosition,\r\n        projectsExampleYRotation,\r\n        projectsExpNinjaExampleSize,\r\n        projectsExpNinjaExampleYPosition,\r\n        projectsExpNinjaExampleZPosition,\r\n        projectsExpNinjaExampleYRotation\r\n    } = useResponsive3d()\r\n\r\n    return (\r\n        <>\r\n            <group\r\n                position={[-16, projectsExampleYPosition, projectsExampleZPosition]}\r\n                rotation={[0, projectsExampleYRotation, 0]}\r\n                scale={projectsExampleSize}\r\n            >\r\n                <mesh\r\n                    visible={currentExampleVisible}\r\n                >\r\n                    <planeGeometry/>\r\n                    <meshStandardMaterial\r\n                        transparent={true}\r\n                        // opacity={0.5}\r\n                        map={currentExample}\r\n                    />\r\n                </mesh>\r\n            </group>\r\n            {/*<Kakashi*/}\r\n            {/*    position={[-19, projectsExpNinjaExampleYPosition, projectsExpNinjaExampleZPosition]}*/}\r\n            {/*    rotation={[0, projectsExpNinjaExampleYRotation, 0]}*/}\r\n            {/*    expNinjaVisible={expNinjaVisible}*/}\r\n            {/*/>*/}\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, {useEffect, useMemo, useRef, useState} from \"react\";\r\nimport * as THREE from \"three\"\r\nimport {useLoader} from \"@react-three/fiber\";\r\nimport {ProjectsExamples} from \"../ProjectsExamples\";\r\nimport {useResponsive3d} from \"../../../customHooks/useResponsive3d\";\r\n\r\n\r\nexport const ProjectsListText = () => {\r\n\r\n    const {projectsTextSize} = useResponsive3d()\r\n\r\n    const FontConfig = ({text, position, rotation, uniqueColor}) => {\r\n        const font = useLoader(THREE.FontLoader, \"/Roboto-Slab-Bold.json\");\r\n        const config = useMemo(\r\n            () => ({\r\n                font: font,\r\n                size: projectsTextSize,\r\n                height: 0.2,\r\n                curveSegments: 32,\r\n                bevelEnabled: true,\r\n                bevelThickness: 0.03,\r\n                bevelSize: 0.02,\r\n                bevelOffset: 0,\r\n                bevelSegments: 5\r\n            }),\r\n            [font]\r\n        );\r\n        const mesh = useRef();\r\n        return (\r\n            <>\r\n                <group position={position} rotation={rotation}>\r\n                    <mesh ref={mesh}>\r\n                        <textGeometry args={[text, config]}/>\r\n                        <meshBasicMaterial color={uniqueColor}/>\r\n                    </mesh>\r\n                </group>\r\n            </>\r\n        )\r\n    }\r\n    const ListText = () => {\r\n\r\n        //set the state of the icon\r\n        const [exampleState, setExampleState] = useState(null)\r\n\r\n        //color of text before being changed\r\n        const startingColor = \"rgb(122,158,248)\"\r\n\r\n        //allows each skill to change color\r\n        const [saiyanWebDevColor, setSaiyanWebDevColor] = useState(startingColor)\r\n        const [expNinjaColor, setExpNinjaColor] = useState(startingColor)\r\n        const [alienGramColor, setAlienGramColor] = useState(startingColor)\r\n\r\n        //Functionality to 30 second timer\r\n        const [thirtySeconds, setThirtySeconds] = useState(30)\r\n        const [timerOnOff, setTimerOnOff] = useState(true)\r\n\r\n        useEffect(() => {\r\n            if (timerOnOff === true) {\r\n                if (thirtySeconds === -1) {\r\n                    setThirtySeconds(30)\r\n                } else if (thirtySeconds > -2) {\r\n                    const intervalId = setInterval(() => {\r\n                        setThirtySeconds(thirtySeconds => thirtySeconds - 1)\r\n                    }, 1000)\r\n                    // console.log(\"seconds\", thirtySeconds)\r\n                    return () => clearInterval(intervalId)\r\n                }\r\n            }\r\n        }, [thirtySeconds, timerOnOff])\r\n\r\n        useEffect(() => {\r\n            if (timerOnOff === true) {\r\n                if (thirtySeconds === 30) {\r\n                    setExampleState(\"saiyanWebDevActive\")\r\n                    setSaiyanWebDevColor(\"#FFFFFF\")\r\n                    setAlienGramColor(startingColor)\r\n                } else if (thirtySeconds === 20) {\r\n                    setExampleState(\"expNinjaActive\")\r\n                    setExpNinjaColor(\"#FFFFFF\")\r\n                    setSaiyanWebDevColor(startingColor)\r\n                } else if (thirtySeconds === 10) {\r\n                    setExampleState(\"alienGramActive\")\r\n                    setAlienGramColor(\"#FFFFFF\")\r\n                    setExpNinjaColor(startingColor)\r\n                }\r\n            }\r\n        }, [exampleState, thirtySeconds])\r\n\r\n        //sets cursor on hover\r\n        const [hovered, setHovered] = useState(false)\r\n        useEffect(() => void (document.body.style.cursor = hovered ? \"pointer\" : \"auto\"), [hovered])\r\n\r\n        const {projectsTextXPosition, projectsTextYPosition, projectsTextZPosition} = useResponsive3d()\r\n\r\n        return (\r\n            <>\r\n                <group\r\n                    position={[projectsTextXPosition, projectsTextYPosition, projectsTextZPosition]}\r\n\r\n                >\r\n                    <group\r\n                        onClick={() => window.open(\"https://saiyanwebdev.com/\")}\r\n                        onPointerOver={() => {\r\n                            setTimerOnOff(false)\r\n                            setSaiyanWebDevColor(\"#2779F6\")\r\n                            setHovered(true)\r\n                            setExampleState(\"saiyanWebDevActive\")\r\n                        }}\r\n                        onPointerOut={() => {\r\n                            setTimerOnOff(true)\r\n                            setSaiyanWebDevColor(startingColor)\r\n                            setHovered(false)\r\n                        }}\r\n                    >\r\n                        <FontConfig\r\n                            text=\"Saiyan Web Dev\"\r\n                            position={[-20, 2, 10]}\r\n                            rotation={[0, 1.570796, 0]}\r\n                            uniqueColor={saiyanWebDevColor}\r\n                        />\r\n                    </group>\r\n                    <group\r\n                        onClick={() => window.open(\"https://expninja.com/\")}\r\n                        onPointerOver={() => {\r\n                            setTimerOnOff(false)\r\n                            setExpNinjaColor(\"#2779F6\")\r\n                            setHovered(true)\r\n                            setExampleState(\"expNinjaActive\")\r\n                        }}\r\n                        onPointerOut={() => {\r\n                            setTimerOnOff(true)\r\n                            setExpNinjaColor(startingColor)\r\n                            setHovered(false)\r\n                        }}\r\n                    >\r\n                        <FontConfig\r\n                            text=\"Exp Ninja\"\r\n                            position={[-20, -2, 10]}\r\n                            rotation={[0, 1.570796, 0]}\r\n                            uniqueColor={expNinjaColor}\r\n                        />\r\n                    </group>\r\n                    <group\r\n                        onClick={() => window.open(\"http://143.198.234.16/\")}\r\n                        onPointerOver={() => {\r\n                            setTimerOnOff(false)\r\n                            setAlienGramColor(\"#2779F6\")\r\n                            setHovered(true)\r\n                            setExampleState(\"alienGramActive\")\r\n                        }}\r\n                        onPointerOut={() => {\r\n                            setTimerOnOff(true)\r\n                            setAlienGramColor(startingColor)\r\n                            setHovered(false)\r\n                        }}\r\n                    >\r\n                        <FontConfig\r\n                            text=\"AlienGram\"\r\n                            position={[-20, -6, 10]}\r\n                            rotation={[0, 1.570796, 0]}\r\n                            uniqueColor={alienGramColor}\r\n                        />\r\n                    </group>\r\n                </group>\r\n                <ProjectsExamples\r\n                    exampleState={exampleState}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <ListText/>\r\n        </>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/blender.9bfd4ce1.glb\";","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, { useRef } from 'react'\r\nimport { useGLTF } from '@react-three/drei'\r\nimport blenderGLB from './blender.glb'\r\n\r\nexport default function Blender(props) {\r\n  const group = useRef()\r\n  const { nodes, materials } = useGLTF(blenderGLB)\r\n  return (\r\n    <group ref={group} {...props} dispose={null}>\r\n      <group rotation={[-Math.PI / 2, 0, 0]}>\r\n        <mesh geometry={nodes.Object_10.geometry} material={materials['SVGMat.033']} />\r\n        <mesh geometry={nodes.Object_2.geometry} material={materials['SVGMat.024']} />\r\n        <mesh geometry={nodes.Object_3.geometry} material={materials['SVGMat.026']} />\r\n        <mesh geometry={nodes.Object_4.geometry} material={materials['SVGMat.027']} />\r\n        <mesh geometry={nodes.Object_5.geometry} material={materials['SVGMat.028']} />\r\n        <mesh geometry={nodes.Object_6.geometry} material={materials['SVGMat.029']} />\r\n        <mesh geometry={nodes.Object_7.geometry} material={materials['SVGMat.030']} />\r\n        <mesh geometry={nodes.Object_8.geometry} material={materials['SVGMat.031']} />\r\n        <mesh geometry={nodes.Object_9.geometry} material={materials['SVGMat.032']} />\r\n      </group>\r\n    </group>\r\n  )\r\n}\r\n\r\nuseGLTF.preload(blenderGLB)\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Box, useTexture} from \"@react-three/drei\";\r\nimport {useResponsive3d} from \"../../../customHooks/useResponsive3d\";\r\n\r\nexport const SkillsIcons = ({iconState}) => {\r\n\r\n    //loads textures for the icons\r\n    const reactIcon = useTexture(\"/react-icon.png\")\r\n    const expressIcon = useTexture(\"/express-icon.png\")\r\n    const reduxIcon = useTexture(\"/redux-icon.png\")\r\n    const dockerIcon = useTexture(\"/docker-icon.png\")\r\n    const bootstrapIcon = useTexture(\"/bootstrap-icon.png\")\r\n    const githubIcon = useTexture(\"/github-icon.png\")\r\n\r\n    const [currentIcon, setCurrentIcon] = useState(null)\r\n\r\n\r\n    //determines which icon is showing\r\n    useEffect(() => {\r\n        if (iconState === \"reactActive\") {\r\n            setCurrentIcon(reactIcon)\r\n        } else if (iconState === \"expressActive\") {\r\n            setCurrentIcon(expressIcon)\r\n        } else if (iconState === \"reduxActive\") {\r\n            setCurrentIcon(reduxIcon)\r\n        } else if (iconState === \"dockerActive\") {\r\n            setCurrentIcon(dockerIcon)\r\n        } else if (iconState === \"bootstrapActive\") {\r\n            setCurrentIcon(bootstrapIcon)\r\n        } else if (iconState === \"githubActive\") {\r\n            setCurrentIcon(githubIcon)\r\n        }\r\n        // console.log(\"icon state\", iconState)\r\n    }, [iconState])\r\n\r\n    //sets responsive behavior\r\n    const { skillsIconSize, skillsIconZPositionSize } = useResponsive3d()\r\n\r\n    return (\r\n        <>\r\n            <group\r\n                position={[20, 0, skillsIconZPositionSize]}\r\n                rotation={[0, -1.570796, 0]}\r\n                scale={skillsIconSize}\r\n            >\r\n                <mesh>\r\n                    <planeGeometry/>\r\n                    <meshStandardMaterial\r\n                        transparent={true}\r\n                        // opacity={0.5}\r\n                        map={currentIcon}\r\n                    />\r\n                </mesh>\r\n            </group>\r\n        </>\r\n    )\r\n}\r\n","import React, {useEffect, useMemo, useRef, useState} from \"react\";\r\nimport * as THREE from \"three\"\r\nimport {useLoader} from \"@react-three/fiber\";\r\nimport Blender from \"../Blender\";\r\nimport {SkillsIcons} from \"../skills-icons/SkillsIcons\";\r\nimport {Interactive} from \"@react-three/xr\";\r\nimport {useResponsive3d} from \"../../../customHooks/useResponsive3d\";\r\n\r\n//\r\n// /Basaro_Regular.json\r\n// /Ranille-Normal-Regular.json\r\n// /Roboto-Slab-Bold.json\r\n// /Saiyan-Sans-Regular.json\r\n\r\n\r\nexport const SkillsListText = () => {\r\n\r\n    const { skillsTextSize } = useResponsive3d()\r\n\r\n    const FontConfig = ({text, position, rotation, uniqueColor}) => {\r\n        const font = useLoader(THREE.FontLoader, \"/Roboto-Slab-Bold.json\");\r\n        const config = useMemo(\r\n            () => ({\r\n                font: font,\r\n                size: skillsTextSize,\r\n                height: 0.2,\r\n                curveSegments: 32,\r\n                bevelEnabled: false,\r\n                bevelThickness: 0.03,\r\n                bevelSize: 0.02,\r\n                bevelOffset: 0,\r\n                bevelSegments: 5\r\n            }),\r\n            [font]\r\n        );\r\n        const mesh = useRef();\r\n        return (\r\n            <>\r\n                <group position={position} rotation={rotation}>\r\n                    <mesh ref={mesh}>\r\n                        <textGeometry args={[text, config]}/>\r\n                        <meshStandardMaterial color={uniqueColor}/>\r\n                    </mesh>\r\n                </group>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const ListText = () => {\r\n\r\n        //set the state of the icon\r\n        const [iconState, setIconState] = useState(null)\r\n\r\n        //color of text before being changed\r\n        const startingColor = \"rgb(122,158,248)\"\r\n\r\n        //allows each skill to change color\r\n        const [reactColor, setReactColor] = useState(startingColor)\r\n        const [expressColor, setExpressColor] = useState(startingColor)\r\n        const [reduxColor, setReduxColor] = useState(startingColor)\r\n        const [dockerColor, setDockerColor] = useState(startingColor)\r\n        const [bootstrapColor, setBootstrapColor] = useState(startingColor)\r\n        const [githubColor, setGithubColor] = useState(startingColor)\r\n\r\n        //Functionality to 30 second timer\r\n        const [thirtySeconds, setThirtySeconds] = useState(30)\r\n        const [timerOnOff, setTimerOnOff] = useState(true)\r\n\r\n        useEffect(() => {\r\n            if (timerOnOff === true) {\r\n                if (thirtySeconds === -1) {\r\n                    setThirtySeconds(30)\r\n                } else if (thirtySeconds > -2) {\r\n                    const intervalId = setInterval(() => {\r\n                        setThirtySeconds(thirtySeconds => thirtySeconds - 1)\r\n                    }, 1000)\r\n                    // console.log(\"seconds\", thirtySeconds)\r\n                    return () => clearInterval(intervalId)\r\n                }\r\n            }\r\n        }, [thirtySeconds, timerOnOff])\r\n\r\n        useEffect(() => {\r\n            if (timerOnOff === true) {\r\n                if (thirtySeconds === 30) {\r\n                    setIconState(\"reactActive\")\r\n                    setReactColor(\"#61dafb\")\r\n                    setGithubColor(startingColor)\r\n                } else if (thirtySeconds === 25) {\r\n                    setIconState(\"expressActive\")\r\n                    setExpressColor(\"#FFFFFF\")\r\n                    setReactColor(startingColor)\r\n                } else if (thirtySeconds === 20) {\r\n                    setIconState(\"reduxActive\")\r\n                    setReduxColor(\"#764abc\")\r\n                    setExpressColor(startingColor)\r\n                } else if (thirtySeconds === 15) {\r\n                    setIconState(\"dockerActive\")\r\n                    setDockerColor(\"#2496ed\")\r\n                    setReduxColor(startingColor)\r\n                } else if (thirtySeconds === 10) {\r\n                    setIconState(\"bootstrapActive\")\r\n                    setBootstrapColor(\"#7952b3\")\r\n                    setDockerColor(startingColor)\r\n                } else if (thirtySeconds === 5) {\r\n                    setIconState(\"githubActive\")\r\n                    setGithubColor(\"#FFF\")\r\n                    setBootstrapColor(startingColor)\r\n                }\r\n            }\r\n        }, [iconState, thirtySeconds])\r\n\r\n\r\n        const { skillsTextXPosition, skillsTextYPosition, skillsTextZPosition } = useResponsive3d()\r\n\r\n        return (\r\n            <>\r\n                {/*<Blender*/}\r\n                {/*    position={[19, 0, 0]}*/}\r\n                {/*    rotation={[0, -1.570796, 0]}*/}\r\n                {/*/>*/}\r\n                <group\r\n                    //this group moves the whole list\r\n                    position = {[skillsTextXPosition, skillsTextYPosition, skillsTextZPosition]}>\r\n                    <group\r\n                        onPointerEnter={() => {\r\n                            setIconState(\"reactActive\")\r\n                            setReactColor(\"#61dafb\")\r\n                            setTimerOnOff(false)\r\n                        }}\r\n                        onPointerLeave={() => {\r\n                            setReactColor(startingColor)\r\n                            setTimerOnOff(true)\r\n                        }}\r\n                    >\r\n                        <Interactive\r\n                            // onSelect={() => setColor(\"#0000ff\")}\r\n                            onHover={() => {\r\n                                setIconState(\"reactActive\")\r\n                                setReactColor(\"#61dafb\")\r\n                                setTimerOnOff(false)\r\n                            }}\r\n                        >\r\n                            <FontConfig\r\n                                text=\"React\"\r\n                                position={[20, 4, 0]} //separate each new item in list by y-2\r\n                                rotation={[0, -1.570796, 0]}\r\n                                uniqueColor={reactColor}\r\n                            />\r\n                        </Interactive>\r\n                    </group>\r\n                    <group\r\n                        onPointerEnter={() => {\r\n                            setIconState(\"expressActive\")\r\n                            setExpressColor(\"#FFFFFF\")\r\n                            setTimerOnOff(false)\r\n                        }}\r\n                        onPointerLeave={() => {\r\n                            setExpressColor(startingColor)\r\n                            setTimerOnOff(true)\r\n                        }}\r\n                    >\r\n                        <Interactive\r\n                            onSelect={() => {\r\n                                setIconState(\"expressActive\")\r\n                                setExpressColor(\"#FFFFFF\")\r\n                                setTimerOnOff(false)\r\n                            }}\r\n                        >\r\n                            <FontConfig\r\n                                text=\"Express\"\r\n                                position={[20, 2, 0]}\r\n                                rotation={[0, -1.570796, 0]}\r\n                                uniqueColor={expressColor}\r\n                            />\r\n                        </Interactive>\r\n                    </group>\r\n                    <group\r\n                        onPointerEnter={() => {\r\n                            setIconState(\"reduxActive\")\r\n                            setReduxColor(\"#764abc\")\r\n                            setTimerOnOff(false)\r\n                        }}\r\n                        onPointerLeave={() => {\r\n                            setReduxColor(startingColor)\r\n                            setTimerOnOff(true)\r\n                        }}\r\n                    >\r\n                        <Interactive\r\n                            onSqueezeStart={() => {\r\n                                setIconState(\"reduxActive\")\r\n                                setReduxColor(\"#764abc\")\r\n                                setTimerOnOff(false)\r\n                            }}\r\n                            onSqueezeEnd={() => {\r\n                                setReduxColor(startingColor)\r\n                                setTimerOnOff(true)\r\n                            }}\r\n                        >\r\n                            <FontConfig\r\n                                text=\"Redux\"\r\n                                position={[20, 0, 0]}\r\n                                rotation={[0, -1.570796, 0]}\r\n                                uniqueColor={reduxColor}\r\n                            />\r\n                        </Interactive>\r\n                    </group>\r\n                    <group\r\n                        onPointerEnter={() => {\r\n                            setIconState(\"dockerActive\")\r\n                            setDockerColor(\"#2496ed\")\r\n                            setTimerOnOff(false)\r\n                        }}\r\n                        onPointerLeave={() => {\r\n                            setDockerColor(startingColor)\r\n                            setTimerOnOff(true)\r\n                        }}\r\n                    >\r\n                        <FontConfig\r\n                            text=\"Docker\"\r\n                            position={[20, -2, 0]}\r\n                            rotation={[0, -1.570796, 0]}\r\n                            uniqueColor={dockerColor}\r\n                        />\r\n                    </group>\r\n                    <group\r\n                        onPointerEnter={() => {\r\n                            setIconState(\"bootstrapActive\")\r\n                            setBootstrapColor(\"#7952b3\")\r\n                            setTimerOnOff(false)\r\n                        }}\r\n                        onPointerLeave={() => {\r\n                            setBootstrapColor(startingColor)\r\n                            setTimerOnOff(true)\r\n                        }}\r\n                    >\r\n                        <FontConfig\r\n                            text=\"Bootstrap\"\r\n                            position={[20, -4, 0]}\r\n                            rotation={[0, -1.570796, 0]}\r\n                            uniqueColor={bootstrapColor}\r\n                        />\r\n                    </group>\r\n                    <group\r\n                        onPointerEnter={() => {\r\n                            setIconState(\"githubActive\")\r\n                            setGithubColor(\"#FFF\")\r\n                            setTimerOnOff(false)\r\n                        }}\r\n                        onPointerLeave={() => {\r\n                            setGithubColor(startingColor)\r\n                            setTimerOnOff(true)\r\n                        }}\r\n                    >\r\n                        <FontConfig\r\n                            text=\"GitHub\"\r\n                            position={[20, -6, 0]}\r\n                            rotation={[0, -1.570796, 0]}\r\n                            uniqueColor={githubColor}\r\n                        />\r\n                    </group>\r\n                </group>\r\n                <SkillsIcons\r\n                    // position={[0, 0, 0]}\r\n                    iconState={iconState}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <ListText/>\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n","import React, {useEffect, useMemo, useRef, useState} from \"react\";\r\nimport * as THREE from \"three\"\r\nimport {useLoader} from \"@react-three/fiber\";\r\nimport Blender from \"../Blender\";\r\nimport {SkillsIcons} from \"../skills-icons/SkillsIcons\";\r\nimport {Interactive} from \"@react-three/xr\";\r\nimport {useResponsive3d} from \"../../../customHooks/useResponsive3d\";\r\n\r\n//\r\n// /Basaro_Regular.json\r\n// /Ranille-Normal-Regular.json\r\n// /Roboto-Slab-Bold.json\r\n// /Saiyan-Sans-Regular.json\r\n\r\n\r\nexport const TitleProfessionText = () => {\r\n\r\n    // const {skillsTextSize} = useResponsive3d()\r\n\r\n    const {professionSize, professionTitleSize, professionXPosition, professionYPosition, professionTitleXPosition, professionTitleYPosition} = useResponsive3d()\r\n\r\n    const FontConfig = ({text, position, rotation, uniqueColor, uniqueSize, uniqueMaterial}) => {\r\n        const font = useLoader(THREE.FontLoader, \"/Roboto-Slab-Bold.json\");\r\n        const config = useMemo(\r\n            () => ({\r\n                font: font,\r\n                size: uniqueSize,\r\n                height: 0.2,\r\n                curveSegments: 32,\r\n                bevelEnabled: false,\r\n                bevelThickness: 0.03,\r\n                bevelSize: 0.02,\r\n                bevelOffset: 0,\r\n                bevelSegments: 5\r\n            }),\r\n            [font]\r\n        );\r\n        const mesh = useRef();\r\n        return (\r\n            <>\r\n                <group position={position} rotation={rotation}>\r\n                    <mesh ref={mesh}>\r\n                        <textGeometry args={[text, config]}/>\r\n                        { uniqueMaterial === false ? //conditional to determine material of text and description\r\n                            <meshStandardMaterial color={uniqueColor}/>\r\n                            :\r\n                            <meshNormalMaterial />\r\n                        }\r\n                    </mesh>\r\n                </group>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const ProfessionText = () => {\r\n\r\n        //set the state of the icon\r\n        const [textState, setTextState] = useState(\"\")\r\n        const [descriptionState, setDescriptionState] = useState(\"\")\r\n\r\n        //color of text before being changed\r\n        let startingColor = \"#ea2e6f\"\r\n\r\n        //allows each skill to change color\r\n        const [textColor, setTextColor] = useState(startingColor)\r\n\r\n        //Functionality to 30 second timer\r\n        const [thirtySeconds, setThirtySeconds] = useState(30)\r\n        const [timerOnOff, setTimerOnOff] = useState(true)\r\n\r\n        useEffect(() => {\r\n            if (timerOnOff === true) {\r\n                if (thirtySeconds === -1) {\r\n                    setThirtySeconds(30)\r\n                } else if (thirtySeconds > -2) {\r\n                    const intervalId = setInterval(() => {\r\n                        setThirtySeconds(thirtySeconds => thirtySeconds - 1)\r\n                    }, 1000)\r\n                    // console.log(\"seconds\", thirtySeconds)\r\n                    return () => clearInterval(intervalId)\r\n                }\r\n            }\r\n        }, [thirtySeconds, timerOnOff])\r\n\r\n        useEffect(() => {\r\n            if (timerOnOff === true) {\r\n                if (thirtySeconds === 30) {\r\n                    setTextState(\"Full \")\r\n                } else if (thirtySeconds === 28) {\r\n                    setTextState(\"Full Stack \")\r\n                } else if (thirtySeconds === 26) {\r\n                    setTextState(\"Full Stack Website\")\r\n                } else if (thirtySeconds === 24) {\r\n                    setDescriptionState(\"Creator\")\r\n                } else if (thirtySeconds === 22) {\r\n                    setDescriptionState(\"Designer\")\r\n                } else if (thirtySeconds === 20) {\r\n                    setDescriptionState(\"Developer\")\r\n                } else if (thirtySeconds === 18) {\r\n                    setDescriptionState(\"Creator\")\r\n                } else if (thirtySeconds === 16) {\r\n                    setDescriptionState(\"Designer\")\r\n                } else if (thirtySeconds === 14) {\r\n                    setDescriptionState(\"Developer\")\r\n                } else if (thirtySeconds === 12) {\r\n                    setDescriptionState(\"Creator\")\r\n                } else if (thirtySeconds === 10) {\r\n                    setDescriptionState(\"Designer\")\r\n                } else if (thirtySeconds === 8) {\r\n                    setDescriptionState(\"Developer\")\r\n                } else if (thirtySeconds === 6) {\r\n                    setDescriptionState(\"Creator\")\r\n                    setTimerOnOff(false)\r\n                }\r\n            }\r\n        }, [textState, thirtySeconds])\r\n\r\n\r\n        return (\r\n            <>\r\n                <group\r\n                    position={[0, 0, 0]}\r\n                >\r\n                    <FontConfig\r\n                        text={textState}\r\n                        position={[professionXPosition, professionYPosition, -15]} //separate each new item in list by y-2\r\n                        rotation={[0, 0, 0]}\r\n                        uniqueColor={textColor}\r\n                        uniqueSize={professionSize}\r\n                        uniqueMaterial={false}\r\n                    />\r\n                    <FontConfig\r\n                        text={descriptionState}\r\n                        position={[professionTitleXPosition, professionTitleYPosition, -15]} //separate each new item in list by y-2\r\n                        rotation={[0, 0, 0]}\r\n                        uniqueColor={textColor}\r\n                        uniqueSize={professionTitleSize}\r\n                        uniqueMaterial={true}\r\n                    />\r\n                </group>\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <ProfessionText/>\r\n        </>\r\n    )\r\n}\r\n","import React, {useEffect, useMemo, useRef, useState} from \"react\";\r\nimport * as THREE from \"three\"\r\nimport {useLoader} from \"@react-three/fiber\";\r\nimport {useResponsive3d} from \"../../../customHooks/useResponsive3d\";\r\n\r\n\r\n//Extra fonts\r\n// /Basaro_Regular.json\r\n\r\n// /Sunmore-Slant-Free-Regular.json\r\n// /Ranille-Normal-Regular.json\r\n// /Roboto-Slab-Bold.json\r\n// /Saiyan-Sans-Regular.json\r\n\r\nexport const ContactFormText = () => {\r\n\r\n    const { contactFormTextSize } = useResponsive3d()\r\n\r\n\r\n    const FontConfig = ({text, position, rotation}) => {\r\n        const font = useLoader(THREE.FontLoader, \"/Sunmore-Slant-Free-Regular.json\");\r\n        const config = useMemo(\r\n            () => ({\r\n                font: font,\r\n                size: contactFormTextSize,\r\n                height: 0.2,\r\n                curveSegments: 32,\r\n                bevelEnabled: true,\r\n                bevelThickness: 0.03,\r\n                bevelSize: 0.02,\r\n                bevelOffset: 0,\r\n                bevelSegments: 5\r\n            }),\r\n            [font]\r\n        );\r\n        const mesh = useRef();\r\n        return (\r\n            <>\r\n                <group position={position} rotation={rotation}>\r\n                    <mesh ref={mesh}>\r\n                        <textGeometry args={[text, config]}/>\r\n                        <meshBasicMaterial color={\"#e20e83\"}/>\r\n                    </mesh>\r\n                </group>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const TitleText = () => {\r\n\r\n        const {\r\n            contactFormTextXPosition,\r\n            contactFormTextYPosition,\r\n            contactFormTextZPosition,\r\n            contactButtonWidthSize,\r\n            contactButtonHeightSize,\r\n            contactButtonXPosition,\r\n            contactButtonYPosition,\r\n            contactButtonZPosition\r\n\r\n        } = useResponsive3d()\r\n\r\n        const [buttonColor, setButtonColor] = useState(\"#fff\")\r\n\r\n        //hover cursor change\r\n        const [hovered, setHovered] = useState(false)\r\n        useEffect(() => void (document.body.style.cursor = hovered ? \"pointer\" : \"auto\"), [hovered])\r\n\r\n\r\n\r\n        return (\r\n            <>\r\n                <group\r\n                    onClick={ () => window.location = '/contact-form' }\r\n                    onPointerOver={() => {\r\n                        setHovered(true)\r\n                        setButtonColor(\"#24a0ed\")\r\n                    }}\r\n                    onPointerOut={() => {\r\n                        setHovered(false)\r\n                        setButtonColor(\"#fff\")\r\n                    }}\r\n                >\r\n                    <FontConfig\r\n                        text=\"Contact Me\"\r\n                        position={[contactFormTextXPosition, contactFormTextYPosition, contactFormTextZPosition]}\r\n                        // rotation={[0, .75, 0]}\r\n                    />\r\n                    <mesh //this is the contact form button as a Plane geometry\r\n                        position={[contactButtonXPosition, contactButtonYPosition, contactButtonZPosition]}\r\n                    >\r\n                        <planeGeometry\r\n                            attach='geometry' args={[contactButtonWidthSize, contactButtonHeightSize]}\r\n                        />\r\n                        <meshBasicMaterial\r\n                        color={buttonColor}\r\n                        attach='material'\r\n                        />\r\n                    </mesh>\r\n                </group>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TitleText/>\r\n        </>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/mouse01.fcd2f0df.glb\";","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, {useEffect, useRef, useState} from 'react'\r\nimport {useGLTF, useAnimations} from '@react-three/drei'\r\nimport mouseGLB from './mouse01.glb'\r\nimport {useResponsive3d} from \"../../customHooks/useResponsive3d\";\r\n\r\nexport default function Mouse01(props) {\r\n    const group = useRef()\r\n    const {nodes, materials, animations} = useGLTF(mouseGLB)\r\n    const {actions} = useAnimations(animations, group)\r\n\r\n//sets mouse movement\r\n    const [action, setAction] = useState(\"mouseMove\")\r\n\r\n    // const [action, setAction] = useState(\"mouseMove\")\r\n    const [mouseButtonColor, setMouseButtonColor] = useState(\"#a0e734\")\r\n\r\n    useEffect(() => {\r\n        actions[action].reset().fadeIn(0.5).play()\r\n        // setMouseButtonColor(\"#a0e734\")\r\n        return () => actions[action].fadeOut(0.5)\r\n    }, [actions, action]);\r\n\r\n    const {mouseVisible} = useResponsive3d()\r\n\r\n    return (\r\n        <group ref={group} {...props} dispose={null}>\r\n            <group name=\"RootNode_(gltf_orientation_matrix)\" position={[-1.81, 0, 0]} rotation={[-Math.PI / 2, 0, 0]}>\r\n                <group\r\n                    visible={mouseVisible}\r\n                    position={[-31.11, -30.71, -1.89]}\r\n                    on={() => {\r\n                        setAction(\"mouseStill\")\r\n                        setMouseButtonColor(\"#a0e734\")\r\n                    }}\r\n                    onClick={() => {\r\n                        setAction(\"mouseMove\")\r\n                        setMouseButtonColor(\"#a0e734\")\r\n                    }}\r\n                    // on={() => {\r\n                    //     setAction(\"mouseStill\")\r\n                    //     setMouseButtonColor(\"3\")\r\n                    // }}\r\n                >\r\n                    <mesh geometry={nodes.Mesh_0.geometry} material={materials.Material__2}/>\r\n                    <mesh geometry={nodes.Mesh_0001.geometry}>\r\n                        <meshStandardMaterial attach='material' color={mouseButtonColor}/>\r\n                    </mesh>\r\n                </group>\r\n            </group>\r\n        </group>\r\n    )\r\n}\r\n\r\nuseGLTF.preload(mouseGLB)\r\n","export default __webpack_public_path__ + \"static/media/hand-model01.69bfef04.glb\";","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, {useEffect, useRef, useState} from 'react'\r\nimport { useGLTF, useAnimations } from '@react-three/drei'\r\nimport handModel from './hand-model01.glb'\r\nimport {useResponsive3d} from \"../../customHooks/useResponsive3d\";\r\n\r\nexport default function HandModel(props) {\r\n  const group = useRef()\r\n  const { nodes, materials, animations } = useGLTF(handModel)\r\n  const { actions } = useAnimations(animations, group)\r\n\r\n    //sets finger movement\r\n    const [action, setAction] = useState(\"fingerMove\")\r\n\r\n    useEffect(() => {\r\n        actions[action].reset().fadeIn(0.5).play()\r\n        // setMouseButtonColor(\"#a0e734\")\r\n        return () => actions[action].fadeOut(0.5)\r\n    }, [actions, action]);\r\n\r\n    const {fingerVisible} = useResponsive3d()\r\n\r\n  return (\r\n    <group ref={group} {...props} dispose={null} visible={fingerVisible}>\r\n      <mesh\r\n        name=\"node_MeshObject-1005584384-PolyPaper23\"\r\n        geometry={nodes['node_MeshObject-1005584384-PolyPaper23'].geometry}\r\n        material={materials.BlocksPaper}\r\n        // position={[-1.7, 0, 0]}\r\n      />\r\n    </group>\r\n  )\r\n}\r\n\r\nuseGLTF.preload(handModel)\r\n","export default __webpack_public_path__ + \"static/media/headset01.48b21e30.glb\";","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, {useEffect, useRef, useState} from 'react'\r\nimport { useGLTF, useAnimations } from '@react-three/drei'\r\nimport headset from './headset01.glb'\r\nimport {useResponsive3d} from \"../../customHooks/useResponsive3d\";\r\n\r\nexport default function Headset(props) {\r\n  const group = useRef()\r\n  const { nodes, materials, animations } = useGLTF(headset)\r\n  const { actions } = useAnimations(animations, group)\r\n\r\n  //sets finger movement\r\n  const [action, setAction] = useState(\"headsetMove\")\r\n\r\n  useEffect(() => {\r\n    actions[action].reset().fadeIn(0.5).play()\r\n    // setMouseButtonColor(\"#a0e734\")\r\n    return () => actions[action].fadeOut(0.5)\r\n  }, [actions, action]);\r\n\r\n  const {headsetVisible} = useResponsive3d()\r\n\r\n  return (\r\n    <group ref={group} {...props} dispose={null}>\r\n      <group name=\"RootNode_(gltf_orientation_matrix)\"\r\n             // rotation={[-Math.PI / 2, 0, 0]}\r\n      >\r\n        <group\r\n            // position={[-4.38, -3.05, -2.58]}\r\n            visible = {headsetVisible}\r\n        >\r\n          <mesh geometry={nodes.Mesh_0.geometry} material={materials.base} />\r\n          <mesh geometry={nodes.Mesh_1.geometry} material={materials.checker} />\r\n          <mesh geometry={nodes.Mesh_2.geometry} material={materials.checker2} />\r\n          <mesh geometry={nodes.Mesh_3.geometry} material={materials.dots} />\r\n          <mesh geometry={nodes.Mesh_4.geometry} material={materials.foam} />\r\n          <mesh geometry={nodes.Mesh_5.geometry} material={materials.logo} />\r\n          <mesh geometry={nodes.Mesh_6.geometry} material={materials.screen} />\r\n        </group>\r\n      </group>\r\n    </group>\r\n  )\r\n}\r\n\r\nuseGLTF.preload(headset)\r\n","import React, { Suspense } from \"react\";\r\nimport { VRCanvas, DefaultXRControllers, Hands } from \"@react-three/xr\";\r\nimport { OrbitControls, Stars } from \"@react-three/drei\";\r\nimport { TitleText } from \"./3d-text/TitleText\";\r\nimport { SkillsTitleText } from \"./3d-text/SkillsTitleText\";\r\nimport { ProjectsTitleText } from \"./3d-text/ProjectsTitleText\";\r\nimport { ProjectsListText } from \"./3d-text/ProjectsListText\";\r\nimport { SkillsListText } from \"./3d-text/SkillsListText\";\r\nimport { TitleProfessionText } from \"./3d-text/TitleProfessionText\";\r\nimport { ContactFormText } from \"./3d-text/ContactFormText\";\r\n\r\nimport Mouse01 from \"../tutorial/Mouse01\";\r\nimport HandModel from \"../tutorial/Hand-model\";\r\nimport Headset from \"../tutorial/Headset01\";\r\n\r\nimport \"../../ui/scene/sceneStyle.css\";\r\n\r\nexport const ThreeDScene = () => {\r\n  return (\r\n    <>\r\n      <Suspense fallback={<h1 className=\"loading\">Loading...</h1>}>\r\n        <VRCanvas>\r\n          <DefaultXRControllers />\r\n          <Hands />\r\n\r\n          <OrbitControls\r\n            enablePan={true}\r\n            enableZoom={true}\r\n            // distance of camera creation\r\n            minDistance={0}\r\n            maxDistance={3}\r\n            rotateSpeed={0.3}\r\n            // vertical angle limit\r\n            minPolarAngle={1.5708}\r\n            maxPolarAngle={1.5708}\r\n            // horizontal angle limit\r\n            minAzimuthAngle={-1.57}\r\n            maxAzimuthAngle={1.57}\r\n          />\r\n\r\n          <ambientLight intensity={1} />\r\n\r\n            <group>\r\n              <group>\r\n                <TitleText />\r\n                <TitleProfessionText />\r\n                <Mouse01\r\n                  position={[3, -8, -15]}\r\n                  rotation={[0.4, -1.3, 0.2]}\r\n                  scale={0.05}\r\n                />\r\n                <HandModel\r\n                  position={[-0.5, -6.5, -15]}\r\n                  rotation={[0.4, 0, 0]}\r\n                  scale={3}\r\n                />\r\n                <Headset\r\n                  position={[2, -15, -15]}\r\n                  // rotation={[-1.5708, 0, 0]}\r\n                  rotation={[0, 0, 0]}\r\n                  scale={1}\r\n                />\r\n              </group>\r\n\r\n              <ContactFormText />\r\n\r\n              <ProjectsTitleText />\r\n              <ProjectsListText />\r\n\r\n              <group position={[0, 0, 0]} rotation={[0, 0, 0]}>\r\n                <SkillsTitleText />\r\n                <SkillsListText />\r\n              </group>\r\n\r\n              {/*<ReferenceCenter/>*/}\r\n              {/*<ReferenceProject/>*/}\r\n              {/*<ReferenceSkills/>*/}\r\n              {/*<RightArrow/>*/}\r\n\r\n              <Stars\r\n                radius={100}\r\n                depth={50}\r\n                count={5000}\r\n                factor={4}\r\n                saturation={0}\r\n                fade\r\n              />\r\n\r\n              {/*<Walls/>*/}\r\n            </group>\r\n        </VRCanvas>\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {ThreeDScene} from \"./scene/ThreeDScene\";\r\nimport './scene/sceneStyle.css'\r\n\r\n//if xr is NOT on load css to hide xr button\r\nconst xr = navigator.xr;\r\n\r\nif (xr === undefined || null) {\r\n    import ('../ui/scene/customVRButtonSettings.css')\r\n}\r\nexport const Home = () => {\r\n    return (\r\n        <>\r\n            <ThreeDScene />\r\n        </>\r\n    )\r\n}\r\n","import ReactDOM from 'react-dom'\r\nimport {App} from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.css\"\r\n\r\n// Use the store so that we can use it to pass information.\r\nReactDOM.render(App(), document.querySelector('#root'));\r\n","import {BrowserRouter} from \"react-router-dom\";\r\nimport {Route, Switch} from 'react-router'\r\nimport {Home} from \"./ui/Home\";\r\nimport {Contact} from \"./ui/Contact\";\r\n\r\n\r\nexport const App = () => (\r\n        <>\r\n                <BrowserRouter>\r\n                    <Switch>\r\n                        <Route exact path='/' component={Home}/>\r\n                        <Route exact path='/contact-form' component={Contact}/>\r\n                    </Switch>\r\n                </BrowserRouter>\r\n        </>\r\n    )\r\n;\r\n"],"sourceRoot":""}